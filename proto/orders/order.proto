// ./proto/orders/order.proto

syntax = "proto3";

option go_package = "github.com/savita-kumari13/grpc-example/protogen/golang/orders";

import "product/product.proto";
import "google/api/annotations.proto";
import "google/api/date.proto";

message Order {
	int64 order_id = 1 [json_name = "order_id"];
	int64 customer_id = 2 [json_name = "customer_id"];
	bool is_active = 3 [ json_name = "is_active" ];
	repeated Product products = 4;
	google.type.Date order_date = 5 [ json_name = "order_date" ];
}

// A generic empty message that you can re-use to avoid defining duplicated
// empty messages in your APIs
message Empty {}

message PayloadWithSingleOrder {
	Order order = 1;
}

message GetAllOrderResponse {
	repeated Order order = 1;
}

message GetOrderByIdRequest {
	int64 order_id = 1;
}

service Orders {

	// add order
	rpc AddOrder(PayloadWithSingleOrder) returns(PayloadWithSingleOrder) {
		option (google.api.http) = {
			post: "/v0/orders",
			body: "*"
		};
	}

	// get all orders
	rpc GetOrders(Empty) returns(GetAllOrderResponse) { //want to retun all the orders
		option (google.api.http) = {
      get: "/v0/orders"
    };
	}

	// get order by id
	rpc GetOrder(GetOrderByIdRequest) returns(PayloadWithSingleOrder) {
		option (google.api.http) = {
			get: "/v0/orders/{order_id}"
		};
	}

	// update order by id
	rpc UpdateOrder(PayloadWithSingleOrder) returns(PayloadWithSingleOrder) {
		option (google.api.http) = {
			put: "/v0/orders"
			body: "*"
		};
	}
}